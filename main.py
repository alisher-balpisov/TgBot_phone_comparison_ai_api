import logging
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from openai import OpenAI
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è OpenRouter
client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key='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'
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
API_TOKEN = '7881628999:AAFKXjjguh6oLR-wD7sQbfWxMx8tWLVPFb8'
from aiogram.client.default import DefaultBotProperties

bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
from aiogram.filters import Command


@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. "
                        "–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–≤—É—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: 'iPhone 14 –∏ Galaxy S23', "
                        "–∏ —è —Å—Ä–∞–≤–Ω—é –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –ø–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def compare_phones(message: types.Message):
    user_input = message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    if " –∏ " in user_input or " vs " in user_input.lower():
        await message.reply("–°—Ä–∞–≤–Ω–∏–≤–∞—é —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

        try:
            # –ó–∞–ø—Ä–æ—Å –∫ OpenRouter API
            completion = client.chat.completions.create(
                extra_headers={
                    "HTTP-Referer": "https://t.me/YourBotName",
                    "X-Title": "Phone Comparison Bot",
                },
                extra_body={},
                model="google/gemini-2.0-flash-exp:free",
                messages=[
                    {
                        "role": "user",
                        "content": f"""–°—Ä–∞–≤–Ω–∏ –¥–≤–∞ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞: {user_input}.
1. –î–∞–π –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (—ç–∫—Ä–∞–Ω, –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä, –∫–∞–º–µ—Ä–∞, –±–∞—Ç–∞—Ä–µ—è, –ø–∞–º—è—Ç—å, –û–° –∏ —Ç.–ø.).
2. –£–∫–∞–∂–∏ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∫–∞–∂–¥–æ–≥–æ.
3. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–æ–≤, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å emoji (‚úîÔ∏è, ‚ùå, üîã –∏ —Ç.–ø.).
4. –°–¥–µ–ª–∞–π –≤—ã–≤–æ–¥: –∫–∞–∫–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –ª—É—á—à–µ –∏ –∫–æ–º—É –ø–æ–¥–æ–π–¥—ë—Ç.
‚ö†Ô∏è –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –∫–∞–≤—ã—á–∫–∏ ("", '', ¬´¬ª, ‚Äû‚Äú –∏ —Ç.–ø.) –≤–æ–æ–±—â–µ ‚Äî –Ω–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö, –Ω–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö.
–ü–∏—à–∏ –∫–∞–∫ Telegram-—Å–æ–æ–±—â–µ–Ω–∏–µ: —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏, —Å–ø–∏—Å–∫–∞–º–∏, –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Markdown –∏–ª–∏ HTML.
–Ø–∑—ã–∫ ‚Äî —Ä—É—Å—Å–∫–∏–π. –°—Ç–∏–ª—å ‚Äî –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π, –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ —Ç–µ—Ä–º–∏–Ω–∞–º–∏."""
                    }
                ]
            )

            response = completion.choices[0].message.content
            cleaned = response.replace('"', '').replace("¬´", "").replace("¬ª", "").replace("‚Äú", "").replace("‚Äù",
                                                                                                           "").replace(
                "‚Äò", "").replace("‚Äô", "")
            # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —á–∞—Å—Ç–∏
            for i in range(0, len(response), 4096):
                await message.reply(response[i:i + 4096])

        except Exception as e:
            logging.error(f"Error: {e}")
            await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    else:
        await message.reply(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–≤–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ '–∏' –∏–ª–∏ 'vs', –Ω–∞–ø—Ä–∏–º–µ—Ä: 'iPhone 14 –∏ Galaxy S23'")


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
